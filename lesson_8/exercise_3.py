"""
3) Создайте собственный класс-исключение, который должен проверять содержимое списка на
наличие только чисел. Проверить работу исключения на реальном примере. Запрашивать у
пользователя данные и заполнять список необходимо только числами. Класс-исключение
должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока
пользователь сам не остановит работу скрипта, введя, например, команду «stop». При этом
скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
Во время ввода пользователем очередного элемента необходимо реализовать проверку типа
элемента. Вносить его в список, только если введено число. Класс-исключение должен не
позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться.
"""


class CustomError:
    @staticmethod
    def control():
        number_list = []
        while True:
            input_number = input('Введите целое число: ')
            if input_number.lower() == 'stop':
                print('Ввод данных прекращён.')
                break
            try:
                number = int(input_number)
            except ValueError:
                print('Введено некорректное значение. Повторите попытку...')
            else:
                number_list.append(number)
        print(f'Список введённых значений: {number_list}')


CustomError.control()
